apiVersion: apps/v1
kind: Deployment
metadata:
  name: simulation
  labels:
    app: simulation
    service: simulation
    version: v1
spec:
  selector:
    matchLabels:
      app: simulation
      service: simulation
      version: v1
  template:
    metadata:
      labels:
        app: simulation
        service: simulation
        version: v1
      annotations:
        dapr.io/app-id: "simulation"
        dapr.io/app-port: "80"
        dapr.io/enabled: "true"
        sidecar.opentelemetry.io/inject: "true"
        prometheus.io/port: "80"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: simulation
      containers:
        - name: simulation
          image: "{{ .Values.global.containerRegistry }}/simulation:{{ .Values.global.releaseVersion }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: TELEMETRY__LOGGINGENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: simulation-config
                  key: "telemetry.loggingEndpoint"
            - name: TELEMETRY__TRACINGENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: simulation-config
                  key: "telemetry.tracingEndpoint"
            - name: TELEMETRY__NAME
              valueFrom:
                configMapKeyRef:
                  name: simulation-config
                  key: "telemetry.name"
            - name: TELEMETRY__VERSION
              valueFrom:
                configMapKeyRef:
                  name: simulation-config
                  key: "telemetry.version"
          ports:
            - containerPort: 80
              name: http
            - containerPort: 8888
              name: http-metrics
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 30
